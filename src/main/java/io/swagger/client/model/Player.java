/*
 * BTE API
 * Discord Bot API
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Player
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-05-27T20:18:37.442Z[GMT]")
public class Player {
    @SerializedName("nickname")
    private String nickname = null;

    @SerializedName("permission")
    private Integer permission = null;

    public Player nickname(String nickname) {
        this.nickname = nickname;
        return this;
    }

    /**
     * Get nickname
     *
     * @return nickname
     **/
    @Schema(example = "§4Kami [Zürich, CH]", required = true, description = "")
    public String getNickname() {
        return nickname;
    }

    public void setNickname(String nickname) {
        this.nickname = nickname;
    }

    public Player permission(Integer permission) {
        this.permission = permission;
        return this;
    }

    /**
     * Get permission
     * minimum: 0
     * maximum: 100
     *
     * @return permission
     **/
    @Schema(example = "100", required = true, description = "")
    public Integer getPermission() {
        return permission;
    }

    public void setPermission(Integer permission) {
        this.permission = permission;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Player player = (Player) o;
        return Objects.equals(this.nickname, player.nickname) &&
                Objects.equals(this.permission, player.permission);
    }

    @Override
    public int hashCode() {
        return Objects.hash(nickname, permission);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Player {\n");

        sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
        sb.append("    permission: ").append(toIndentedString(permission)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
